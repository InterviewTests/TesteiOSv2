//
//  LoginViewController.swift
//  Test Bank
//
//  Created by Lucas Santana Brito on 20/06/20.
//  Copyright (c) 2020 lsb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
  func displaySomething(viewModel: Login.Something.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    setupButton()
    setupUserTextField()
    setupPasswordTextField()
  }
  
  // MARK: IBOutlet
    
    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var loginButton: UIButton!
  
    // MARK: Do something
    
    func setupButton() {
        loginButton.setRadius()
        loginButton.setShadow()
    }
    
    func setupUserTextField() {
        userTextField.layer.borderWidth = 1.0
        userTextField.layer.borderColor = UIColor.textFieldBorderColor.cgColor
    }
    
    func setupPasswordTextField() {
        passwordTextField.layer.borderWidth = 1.0
        passwordTextField.layer.borderColor = UIColor.textFieldBorderColor.cgColor
    }
    
    @IBAction func doLogin(_ sender: UIButton) {
        guard let userText = userTextField.text else { return }
        guard let passwordText = passwordTextField.text else { return }
        if userText.isCPF {
            print("É um CPF")
        } else if userText.isValidEmail {
            print("É um email")
        } else {
            print("Mostrar error EmailCpf")
        }
        
        if passwordText.isValidPassword {
            print("Senha correta")
        } else {
            print("Mostrar error")
        }
        
    }
    
    
  func doSomething()
  {
    let request = Login.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: Login.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
