//
//  LoginInteractor.swift
//  Test Bank
//
//  Created by Lucas Santana Brito on 20/06/20.
//  Copyright (c) 2020 lsb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
  func doLogin(request: Login.Request)
}

protocol LoginDataStore {
    var account: Login.UserAccount? { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker? = LoginWorker()
    var account: Login.UserAccount?
  
  // MARK: Do something
  
    func doLogin(request: Login.Request) {
        if checkIfUserAndPasswordValidate(request: request) {
            
            worker?.doLogin(request: request) { [weak self] result in
                guard let this = self else { return }
                
                switch result {
                    case .failure(let error):
                        this.presenter?.presentError(errorMessage: "Error no servidor \(error.localizedDescription)")
                    
                    case .success(let response):
                        this.account = response.userAccount
                        this.presenter?.presentSomething(response: response)
                }
            }
        }
    }
    
    func checkIfUserAndPasswordValidate(request: Login.Request) -> Bool {
        if !request.user.isValidEmail && !request.user.isCPF {
            presenter?.presentError(errorMessage: "Email ou cpf inválidos")
            return false
            
        } else if !request.password.isValidPassword {
            presenter?.presentError(errorMessage: "A senha precisa ter pelo menos uma letra maiuscula, um caracter especial e um caracter alfanumérico e mais de 4 caracteres.")
            return false
            
        } else {
            return true
        }
    }
}
