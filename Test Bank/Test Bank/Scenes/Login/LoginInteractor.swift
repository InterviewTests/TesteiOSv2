//
//  LoginInteractor.swift
//  Test Bank
//
//  Created by Lucas Santana Brito on 20/06/20.
//  Copyright (c) 2020 lsb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func doSomething(request: Login.Request)
}

protocol LoginDataStore
{
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Login.Request) {
    if checkIfUserAndPasswordValidate(request: request) {
        
        worker = LoginWorker()
        worker?.doLogin(request: request) { [weak self] result in
            guard let this = self else { return }
            switch result {
            case .failure(let error):
                print(error)
            case .success(let response):
                let response = Login.Response(error: response.error, userAccount: response.userAccount)
                this.presenter?.presentSomething(response: response)
            }
        }
    }
  }
    
    func checkIfUserAndPasswordValidate(request: Login.Request) -> Bool {
        if (request.user.isValidEmail || request.user.isCPF) && request.password.isValidPassword {
            return true
        } else {
            let errorLogin = Login.ErrorLogin(code: nil, message: "Usuário ou senha inválidos")
            let response = Login.Response(error: errorLogin, userAccount: nil)
            presenter?.presentSomething(response: response)
            
            return false
        }
        
    }
}
