//
//  HomeInteractor.swift
//  Test Bank
//
//  Created by Lucas Santana Brito on 23/06/20.
//  Copyright (c) 2020 lsb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func showAccount()
    func getStatements() 
}

protocol HomeDataStore {
    var account: Login.UserAccount? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
   
  var presenter: HomePresentationLogic?
  var worker: HomeWorker? = HomeWorker()
  var account: Login.UserAccount?
  
  // MARK: Do something
    func showAccount() {
        let response = Home.Response(account: account)
        presenter?.presentAccount(response: response)
    }
    
    func getStatements() {
        if let userId = account?.userId {
            worker?.getListStatements(userId: userId) { [weak self] result in
                guard let this = self else { return }
                switch result {
                case .success(let resultStatement):
                    if let errorMessage = resultStatement.error.message {
                        this.presenter?.presentErrorGetStatements(errorMessage: errorMessage)
                    } else {
                        this.presenter?.presentStatements(list: resultStatement.statementList)
                    }
                    
                case .failure(let error):
                    this.presenter?.presentErrorGetStatements(errorMessage: error.localizedDescription)
                }
            }
        } else {
            presenter?.presentErrorGetStatements(errorMessage: "userId not found!")
        }
        
    }
}
