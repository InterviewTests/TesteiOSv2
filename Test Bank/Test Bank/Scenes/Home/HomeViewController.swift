//
//  HomeViewController.swift
//  Test Bank
//
//  Created by Lucas Santana Brito on 23/06/20.
//  Copyright (c) 2020 lsb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class {
    func displayAccount(viewModel: Home.ViewModel)
    func displayStatements(list: [Home.Statement])
}

class HomeViewController: UIViewController, HomeDisplayLogic
{
  var interactor: HomeBusinessLogic?
  var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = HomeInteractor()
    let presenter = HomePresenter()
    let router = HomeRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setupTableView()
    registerCell()
    doSomething()
    setupActivityIndicator()
  }
  
  // MARK: Do something
  
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var accountNumberLabel: UILabel!
    @IBOutlet weak var balanceLabel: UILabel!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    @IBOutlet weak var tablewView: UITableView!
    
    private let statementCell = "StatementCell"
    private var statementList = [Home.Statement]()
    
    @IBAction func doLogout(_ sender: UIButton) {
        router?.goBack(source: self)
    }
    
    private func setupActivityIndicator() {
       if #available(iOS 13.0, *) {
           activityIndicator.style = .large
       } else {
           activityIndicator.style = .whiteLarge
       }
   }
    
    private func setupTableView() {
        tablewView.dataSource = self
        tablewView.delegate = self
    }
    
    private func registerCell() {
        tablewView.register(UINib(nibName: statementCell, bundle: nil), forCellReuseIdentifier: statementCell)
        tablewView.rowHeight = UITableView.automaticDimension
        tablewView.separatorColor = .clear
    }
    
    func doSomething() {
        interactor?.getStatements()
        interactor?.showAccount()
    }
    
    func displayAccount(viewModel: Home.ViewModel) {
        nameLabel.text = viewModel.name
        accountNumberLabel.text = "\(viewModel.agency) / \(viewModel.bankAccount)"
        balanceLabel.text = String(viewModel.balance)
    }
    
    func displayStatements(list: [Home.Statement]) {
        statementList = list
        DispatchQueue.main.async {
            self.tablewView.reloadData()
        }
    }
}
extension HomeViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return statementList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: statementCell, for: indexPath) as? StatementCell else { return UITableViewCell() }
        let statment = statementList[indexPath.row]
        cell.selectionStyle = .none
        cell.updateUI(statement: statment)
        return cell
    }
}

extension HomeViewController: UITableViewDelegate {
    
}
