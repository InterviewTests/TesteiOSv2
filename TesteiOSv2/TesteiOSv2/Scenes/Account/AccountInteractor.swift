//
//  AccountInteractor.swift
//  TesteiOSv2
//
//  Created by Gilson Gil on 16/02/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountBusinessLogic {
  func showAccountDetails(request: Account.ShowAccountDetails.Request)
  func fetchStatements(request: Account.FetchStatements.Request)
}

protocol AccountDataStore {
  var userAccount: UserAccount? { get set }
}

final class AccountInteractor: AccountBusinessLogic, AccountDataStore {
  var presenter: AccountPresentationLogic?
  lazy var worker: AccountWorker? = AccountWorker()
  var userAccount: UserAccount?

  func showAccountDetails(request: Account.ShowAccountDetails.Request) {
    if let userAccount = userAccount {
      let response = Account.ShowAccountDetails.Response(userAccount: userAccount)
      presenter?.presentAccountDetails(response: response)
    }
  }

  func fetchStatements(request: Account.FetchStatements.Request) {
    worker?.fetchStatements { [weak self] response in
      self?.presenter?.presentStatements(response: response)
    }
  }
}
