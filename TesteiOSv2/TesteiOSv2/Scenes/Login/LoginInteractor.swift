//
//  LoginInteractor.swift
//  TesteiOSv2
//
//  Created by Alex Nunes da Silva on 12/01/19.
//  Copyright (c) 2019 Alex Nunes da Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func doLogin(request: Login.LoginLoad.Request.Login)
}

protocol LoginDataStore
{
    var userAccount: UserAcount? {get}
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  var userAccount: UserAcount?

  // MARK: Do something
  
  func doLogin(request: Login.LoginLoad.Request.Login)
  {
    worker = LoginWorker()
    worker?.sendLogin(login: request,completion: { userAccount in
        self.userAccount = userAccount.userAccount
        let response = Login.LoginLoad.Response(user: userAccount)
        self.presenter?.presentSucessLogin(response: response)
        
    }, failure: { error in
//        self.presenter?.presentErrorLogin(error: error)
    })
  }

    

}
