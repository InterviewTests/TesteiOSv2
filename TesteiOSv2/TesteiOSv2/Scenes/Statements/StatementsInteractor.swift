//
//  StatementsInteractor.swift
//  TesteiOSv2
//
//  Created by Silva, Alex Nunes da on 14/01/2019.
//  Copyright (c) 2019 Alex Nunes da Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementsBusinessLogic
{
  func doSomething(request: Statements.StatementsApi.Request)
}

protocol StatementsDataStore
{
  var userAccount: UserAcount? { get set}
}

class StatementsInteractor: StatementsBusinessLogic, StatementsDataStore
{
  var presenter: StatementsPresentationLogic?
  var worker: StatementsWorker?
  var userAccount: UserAcount?
  
  // MARK: Do something
  
  func doSomething(request: Statements.StatementsApi.Request)
  {
    worker = StatementsWorker()
    worker?.doStatementsWork(param: request.param,  completion: { screen in
        let response = Statements.StatementsApi.Response(statement: screen)
        self.presenter?.presentSomething(response: response, userAccount: self.userAccount!)
    }, failure: { error in
         //... 
    })
  }
}
