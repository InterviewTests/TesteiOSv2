//
//  StatementsWorker.swift
//  TesteiOSv2
//
//  Created by Silva, Alex Nunes da on 14/01/2019.
//  Copyright (c) 2019 Alex Nunes da Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class StatementsWorker
{
    typealias StatementsScreensHanler = (StatementModel) -> Swift.Void
    typealias StatementsFailure = (NSError) -> Swift.Void

    func doStatementsWork(param: String, completion : @escaping
        StatementsScreensHanler, failure : @escaping StatementsFailure){
        let requestable = statementsWorkerRequestable(request: Statements.StatementsApi.Request(param: param))
        let request     : HTTRequest<StatementModel> = HTTRequest(requestable: requestable)
        request.get(success: { response in
            guard let statements = response else{
                return
            }
            completion(statements)
            //..
        }, failure: { error in
            failure(error)
        })
    }

}


struct statementsWorkerRequestable : HTTPRequestable {

    var request : Statements.StatementsApi.Request

    var url: URL {
        return URL(string: environment.host + path + "/" + request.param)!
    }

    var path: String {
        return "statements"
    }

    var params: [String : Any] {
        return [:]
    }
}
