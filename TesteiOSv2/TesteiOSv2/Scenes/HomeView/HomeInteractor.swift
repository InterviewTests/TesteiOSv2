//
//  HomeInteractor.swift
//  TesteiOSv2
//
//  Created by Alexandre Gabassi on 30/10/18.
//  Copyright (c) 2018 Alexandre Gabassi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func fetchRegisters(request: Home.FetchRegisters.Request)
    func getUserInfo(request: Home.GetUserInfo.Request)
}

protocol HomeDataStore
{
  var userInfo: UserInfo! { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var userInfo: UserInfo!
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    
    func getUserInfo(request: Home.GetUserInfo.Request) {
        let response = Home.GetUserInfo.Response(userInfo: userInfo)
        presenter?.presentUserInfo(response: response)
    }

  func fetchRegisters(request: Home.FetchRegisters.Request)
  {
    worker = HomeWorker()
    worker?.doRegistersRequest(userid: request.userId) { (success, registerList) in
        
        let response = Home.FetchRegisters.Response(success: success, registers: registerList!)
        self.presenter?.presentRegisters(response: response)
    }
  }
}
