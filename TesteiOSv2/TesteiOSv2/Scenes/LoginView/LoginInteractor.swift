//
//  LoginInteractor.swift
//  TesteiOSv2
//
//  Created by Alexandre Gabassi on 29/10/18.
//  Copyright (c) 2018 Alexandre Gabassi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func doLogin(request: Login.LoginFormFields.Request)
}

protocol LoginDataStore
{
  var userInfo: UserInfo { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var userInfo = UserInfo()
    
    var presenter: LoginPresentationLogic?
    var router: LoginRouter?
    var worker = LoginWorker()
    var isLoggedIn = false

  // MARK: Do login
  
  func doLogin(request: Login.LoginFormFields.Request) 
  {
    worker = LoginWorker()
    worker.doLoginRequest(user: request.user, password: request.password) { (success, userInfo) in
        self.isLoggedIn = success
        let response = Login.LoginFormFields.Response(success: success, info: userInfo!)
        self.userInfo = userInfo!
        self.presenter?.presentLogin(response: response)
    }
  }
}
