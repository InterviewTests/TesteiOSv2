//
//  HomeInteractor.swift
//  TesteiOSv2
//
//  Created by Mônica Marques on 11/03/20.
//  Copyright (c) 2020 Mônica Marques. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    var user: User? { get set }
    var statements: [Statements]? { get }
    func getUserInfo()
    func fetchUserStatements()
}

protocol HomeDataStore
{
    //var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var presenter: HomePresentationLogic?
    var worker: HomeWorker? = HomeWorker()
    var user: User?
    var statements: [Statements]?
    
    //var name: String = ""
    
    // MARK: Do something
    
    func getUserInfo() {
        guard let user = self.user else {
            return
        }
        
        self.presenter?.presentUserInfos(with: user)
    }
    
    func fetchUserStatements() {
        
        self.presenter?.showLoadingView()
        self.worker?.fetchUserStatements(success: { (statements) in
            self.presenter?.hideLoadingView()
            self.statements = statements
            self.presenter?.didFetchedUserStatements()
        }, failure: { (error) in
            self.presenter?.hideLoadingView()
        })
    }
}
