//
//  LoginInteractor.swift
//  TesteiOSv2
//
//  Created by Mônica Marques on 10/03/20.
//  Copyright (c) 2020 Mônica Marques. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    
    func validateUser(_ user: String) -> Bool
    func validatePassword(_ password: String) -> Bool
    func tryLogin(_ request: Login.Request)
    
}

class LoginInteractor: LoginBusinessLogic {

    // MARK: - Variables
    
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker? = LoginWorker()
    
    //MARK: - Protocol LoginBusinessLogic
    
    func validateUser(_ user: String) -> Bool {
        
        if user.isValidEmail || user.isValidCPF {
            return true
        }else {
            self.presenter?.showInvalidUser()
            return false
        }
    }
    
    func validatePassword(_ password: String) -> Bool {
        
        if password.isValidPassword {
            return true
        } else {
            self.presenter?.showInvalidPassword()
            return false
        }
      
    }
    
    func tryLogin(_ request: Login.Request) {
        
        self.presenter?.showLoadingView()
        self.worker?.tryLogin(user: request.user, password: request.password, success: { (user) in
            self.presenter?.hideLoadingView()
            self.presenter?.didLoginSucced(user: user)
        }, failure: { (error) in
            self.presenter?.hideLoadingView()
            if let message = error.message {
                self.presenter?.showLoginError(with: message)
            }
        })
    }
}
