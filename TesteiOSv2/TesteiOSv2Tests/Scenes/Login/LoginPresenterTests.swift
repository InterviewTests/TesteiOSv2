//
//  LoginPresenterTests.swift
//  TesteiOSv2
//
//  Created by Gilson Gil on 17/02/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TesteiOSv2

import Quick
import Nimble

final class LoginPresenterSpec: QuickSpec {
  // MARK: Subject under test
  override func spec() {
    let sut = LoginPresenter()
    let viewController = LoginViewController()
    let window = UIWindow()
    window.rootViewController = viewController
    window.makeKeyAndVisible()
    sut.viewController = viewController

    describe("given a login presenter") {
      context("presents an error") {
        it("the viewcontroller should display an alert") {
          let response = Login.SubmitLogin.Response(userAccount: nil, error: LoginError.invalidUser)
          sut.presentError(response: response)
          expect(viewController.presentedViewController).toEventually(beAnInstanceOf(UIAlertController.self))
        }
      }

      context("presents user account") {
        it("the viewcontroller should route to account view controller") {
          let userAccount = UserAccount(userId: 1, name: "Gilson", bankAccount: "0250", agency: "0001", balance: 123.90)
          let response = Login.SubmitLogin.Response(userAccount: userAccount)
          sut.presentUserAccount(response: response)
          expect(window.rootViewController).toEventually(beAnInstanceOf(AccountViewController.self))
        }
      }

      context("presents persisted credentials") {
        it("the viewcontroller should fill with credentials") {
          let user = "ggg@ggg.com"
          let password = "gggQq!1"
          let fields = Login.SubmitFields(user: user, password: password)
          let response = Login.PrefillCredentials.Response(fields: fields)
          sut.presentPersistedCredentials(response: response)
          expect(viewController.loginView?.userTextField.text).toEventually(equal(user))
          expect(viewController.loginView?.passwordTextField.text).toEventually(equal(password))
        }
      }
    }
  }
}
