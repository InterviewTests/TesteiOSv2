//
//  LoginWorker.swift
//  bankibm
//
//  Created by Alexandre Furquim on 02/11/18.
//  Copyright (c) 2018 Alexandre Furquim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import SwiftyJSON

class LoginWorker {
    
    func doSomeWork() {
        
    }
    
    func doLoginRequest(user: String, password: String, completionHandler: @escaping (Bool, UserAccount?) -> Void) {
        let parameters = ["user": user, "password": password]
        var userAccount = UserAccount()
        Alamofire.request("https://bank-app-test.herokuapp.com/api/login", method: .post, parameters: parameters, encoding: URLEncoding.httpBody)
            .validate(statusCode: 200..<300)
            .validate(contentType: ["application/json"])
            .responseJSON(completionHandler: { (response) in
                guard response.result.isSuccess,
                    let value = response.result.value else {
                        print("Error while fetching tags: \(String(describing: response.result.error))")
                        userAccount.userId = "-1"
                        userAccount.name = "Erro ao efetuar o Login, tente mais tarde!"
                        completionHandler(false, userAccount)
                        return
                }
                
                let json = JSON(value)
                if json["userAccount"].exists() {
                    if json["userAccount"]["userId"].exists() {
                        userAccount.name = json["userAccount"]["name"].stringValue
                        userAccount.agency = json["userAccount"]["agency"].stringValue
                        userAccount.userId = json["userAccount"]["userId"].stringValue
                        userAccount.bankAccount = json["userAccount"]["bankAccount"].stringValue
                        userAccount.balance = json["userAccount"]["balance"].floatValue
                        completionHandler(true, userAccount)
                    }
                }
                
                if json["error"].exists() {
                    if json["error"]["code"].exists() {
                        userAccount.userId = "-1"
                        userAccount.name = json["error"]["message"].stringValue
                        completionHandler(false, userAccount)
                    }
                }
            })
    }
}
