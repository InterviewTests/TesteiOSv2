//
//  StatementListInteractor.swift
//  bankibm
//
//  Created by Alexandre Furquim on 02/11/18.
//  Copyright (c) 2018 Alexandre Furquim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementListBusinessLogic {
    func doSomething(request: StatementList.Something.Request)
    
    func fetchRegisters(request: StatementList.FetchRegisters.Request)
    func getUserInfo(request: StatementList.GetUserAccount.Request)
    
}

protocol StatementListDataStore {
    //var name: String { get set }
    var userAccount: UserAccount { get set }
}

class StatementListInteractor: StatementListBusinessLogic, StatementListDataStore {
    
    var userAccount = UserAccount()
    
    var presenter: StatementListPresentationLogic?
    var worker: StatementListWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: StatementList.Something.Request) {
        worker = StatementListWorker()
        worker?.doSomeWork()
        
        let response = StatementList.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func getUserInfo(request: StatementList.GetUserAccount.Request) {
        let response = StatementList.GetUserAccount.Response(userAccount: userAccount)
        presenter?.presentUserAccount(response: response)
    }
    
    func fetchRegisters(request: StatementList.FetchRegisters.Request) {
        worker = StatementListWorker()
        worker?.doRegistersRequest(userid: request.userId) { (success, registerList) in
            
            let response = StatementList.FetchRegisters.Response(success: success, registers: registerList!)
            self.presenter?.presentRegisters(response: response)
        }
    }
    
}
