//
//  StatementListPresenter.swift
//  bankibm
//
//  Created by Alexandre Furquim on 02/11/18.
//  Copyright (c) 2018 Alexandre Furquim. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementListPresentationLogic {
    func presentSomething(response: StatementList.Something.Response)
    func presentRegisters(response: StatementList.FetchRegisters.Response)
    func presentUserAccount(response: StatementList.GetUserAccount.Response)
    
}

class StatementListPresenter: StatementListPresentationLogic {
    weak var viewController: StatementListDisplayLogic?
    
    // MARK: Do something
    
    func presentSomething(response: StatementList.Something.Response) {
        let viewModel = StatementList.Something.ViewModel()
        viewController?.displaySomething(viewModel: viewModel)
    }
    
    let currencyFormatter: NumberFormatter = {
        let currencyFormatter = NumberFormatter()
        currencyFormatter.numberStyle = .currency
        currencyFormatter.locale = Locale(identifier: "pt_BR")
        return currencyFormatter
    }()
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.timeStyle = .none
        dateFormatter.dateFormat = "dd/MM/yyyy"
        dateFormatter.locale = Locale(identifier: "pt_BR")
        
        return dateFormatter
    }()
    
    // MARK: - Fetch order
    
    func presentUserAccount(response: StatementList.GetUserAccount.Response) {
        let userAccount = response.userAccount
        let s = userAccount.agency!
        let formattedAgency = s[0..<2] + "." + s[2..<8] + "-" + s[8..<s.count]
        
        let account = userAccount.bankAccount! + " / "  + formattedAgency
        
        let balance = currencyFormatter.string(from: NSNumber(value: userAccount.balance!))!
        
        let displayedUserAccount = StatementList.GetUserAccount.ViewModel.DisplayedUserAccount(userId: userAccount.userId, name: userAccount.name, bankAccount: account, agency: userAccount.agency, balance: balance)
        
        let viewModel = StatementList.GetUserAccount.ViewModel(displayedUserAccount: displayedUserAccount)
        viewController?.displayUserAccount(viewModel: viewModel)
    }
    
    
    func presentRegisters(response: StatementList.FetchRegisters.Response) {
        let displayedRegisters = response.registers.map { convert(register: $0) }
        
        let viewModel = StatementList.FetchRegisters.ViewModel(displayedRegisters: displayedRegisters, success: response.success)
        
        viewController?.displayHomeData(viewModel: viewModel)
    }
    
    // MARK: Format entry to displayed entry
    
    private func convert(register: Register) -> StatementList.DisplayedRegister {
        let inputFormatter = DateFormatter()
        inputFormatter.dateFormat = "yyyy-MM-dd"
        let dateInput = inputFormatter.date(from: register.date)
        
        let title = register.title
        let desc  = register.desc
        let date  = dateFormatter.string(from: dateInput!)
        let value = currencyFormatter.string(from: NSNumber(value: register.value))!
        
        return StatementList.DisplayedRegister(title: title, desc: desc, date: date, value: value)
    }
    
}
