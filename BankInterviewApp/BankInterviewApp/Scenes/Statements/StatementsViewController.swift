//
//  StatementsViewController.swift
//  BankInterviewApp
//
//  Created by Osias Carneiro on 10/03/20.
//  Copyright (c) 2020 Osias Carneiro. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementsDisplayLogic: class
{
  func displayFetchedStatements(viewModel: Statements.StatementList.ViewModel)
}

class StatementsViewController: UIViewController, UITableViewDataSource, StatementsDisplayLogic
{
    
  var interactor: StatementsBusinessLogic?
  var router: (NSObjectProtocol & StatementsRoutingLogic & StatementsDataPassing)?

  // MARK: Object lifecycle
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = StatementsInteractor()
    let presenter = StatementsPresenter()
    let router = StatementsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
    
    //MARK: TableView
    
    var statements: Statements.StatementList.ViewModel = Statements.StatementList.ViewModel(statements: [])
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return statements.statements.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: "statementViewCell") as? StatementViewCell {
            cell.configure(model: statements.statements[indexPath.row])
            return cell
        }
        return UITableViewCell()
    }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fillUserData()
    getStatements()
  }
  
    //MARK: IBOutlets
    
    @IBOutlet weak var name: UILabel!
    @IBOutlet weak var agengyAccount: UILabel!
    @IBOutlet weak var balance: UILabel!
    @IBOutlet weak var tableView: UITableView!
    
    //MARK: Logout
    
    @IBAction func logout(_ sender: Any)
    {
        interactor?.doLogout()
        router?.backToLogin(source: self)
    }
    
    //MARK: Get statements
    
    //Starting with an invalid ID (is filled in fillUserData)
    var userId = -1
    
    func getStatements() {
        let request = Statements.StatementList.Request(userId: userId)
        interactor?.fetchStatements(request: request)
    }
  
    // MARK: Fill user data
    
    func fillUserData()
    {
        if let userData = router?.dataStore?.userData {
            name.text = userData.name
            balance.text = userData.balance.formatToCoin()
            agengyAccount.text = "\(userData.account) / \(userData.agency.applyPatternOnNumbers(pattern: "##.######-#", replacmentCharacter: "#"))"
            userId = userData.id
        }
    }
  
  func displayFetchedStatements(viewModel: Statements.StatementList.ViewModel)
  {
    statements = viewModel
    tableView.reloadData()
  }
}
