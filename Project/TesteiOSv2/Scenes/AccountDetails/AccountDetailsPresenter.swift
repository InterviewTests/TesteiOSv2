//
//  AccountDetailsPresenter.swift
//  TesteiOSv2
//
//  Created by Macintosh on 15/11/18.
//  Copyright (c) 2018 Roney Sampaio. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit



protocol AccountDetailsPresentationLogic
{
    
    func showAlert(alertBodyMessage: String)
    func presentFetchedStatementItems(statementList: [Dictionary<String, Any>])
    func presentFetchedAccountDetails(accountData: Login.AccountModel)
}



class AccountDetailsPresenter: AccountDetailsPresentationLogic
{
    
    weak var viewController: AccountDetailsDisplayLogic?
    
    
    // MARK: Present Alert
    func showAlert(alertBodyMessage: String)
    {
        UIAlertController.showAlertAttention(msg: alertBodyMessage, view: viewController as! UIViewController)
    }
    
    
    
    // MARK: Present Accounts Details
    func presentFetchedAccountDetails(accountData: Login.AccountModel) {
        let accountInfo = ("\(accountData.bankAccount)\(accountData.agency)".applyPatternOnNumbers(pattern: "#### / ##.######-#", replacmentCharacter: "#"))
        
        viewController?.displayFetchedUserDetails(name: accountData.name, accountInfo: accountInfo, balance: accountData.balance.toCurrency)
    }
    
    
    
    // MARK: Present Statement List
    func presentFetchedStatementItems(statementList: [Dictionary<String, Any>]) {
        
        var statementItems: [AccountDetails.StatementItem] = []
        
        for item in statementList {
            
            let request = Global.RestParams.StatementRequest.self
            
            let date = item[request.kDate.rawValue] as? String ?? String()
            let description = item[request.kDescription.rawValue] as? String ?? String()
            let title = item[request.kTitle.rawValue] as? String ?? String()
            let value = item[request.kValue.rawValue] as? Double ?? Double()
            
            statementItems.append(AccountDetails.StatementItem(date: date.toDate().stringDate, description: description, title: title, value: value.toCurrency))
        }
        
        viewController?.displayFetchedAccountData(statementItems: statementItems)
    }
}
