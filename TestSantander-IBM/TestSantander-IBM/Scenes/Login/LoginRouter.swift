//
//  LoginRouter.swift
//  TestSantander-IBM
//
//  Created by Erika Albizzati on 26/10/18.
//  Copyright (c) 2018 Erika Albizzati. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol LoginRouterInput {
    func navigateToUserDetailScene()
}

protocol LoginRouterDataSource: class {
    var selectedUser: UserAccount! { get }
}

protocol LoginRouterDataDestination: class {
    
}

class LoginRouter: LoginRouterInput {
    
    weak var viewController: LoginViewController!
    weak private var dataSource: LoginRouterDataSource!
    weak var dataDestination: LoginRouterDataDestination!
    
    struct SegueIdentifiers {
        static let accountDetail = "AccountDetailSegue"
    }

    init(viewController: LoginViewController, dataSource: LoginRouterDataSource, dataDestination: LoginRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    func navigateToUserDetailScene()
    {
        viewController.performSegue(withIdentifier: SegueIdentifiers.accountDetail, sender: viewController)
    }

    // MARK: Communication
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {
        // NOTE: Teach the router which scenes it can communicate with
        
        guard let segueIdentifier = segue.identifier else {
            return
        }
        
        switch segueIdentifier {
        case SegueIdentifiers.accountDetail:
            passDataToUserDetailScene(for: segue)
        default:
            return
        }
    }
    
    func passDataToUserDetailScene(for segue: UIStoryboardSegue)
    {
        // NOTE: Teach the router how to pass data to the next scene
        
        if let statementViewController = segue.destination as? StatementListViewController {
            statementViewController.router?.dataDestination.user = dataSource.selectedUser
        }
    }
}
