//
//  StatementViewController.swift
//  TestSantander-IBM
//
//  Created by Renato Carvalhan on 22/01/19.
//  Copyright (c) 2019 Renato Carvalhan. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol StatementViewControllerInput {
    func displayStatements(response: StatementScene.GetStatements.Response)
}

protocol StatementViewControllerOutput {
    func getStatements(request: StatementScene.GetStatements.Request, completionHandler: @escaping (Bool, String?) -> Void)
}

class StatementViewController: UIViewController, StatementViewControllerInput {
    
    
    var output: StatementViewControllerOutput?
    var router: StatementRouter?
    var statements: [Statement] = []
    
    @IBOutlet var nameLabel: UILabel!
    @IBOutlet var accountLabel: UILabel!
    @IBOutlet var balanceLabel: UILabel!
    @IBOutlet var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        StatementConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        set(account: router!.dataDestination.userAccount!)
        registerCellOnTableView()
        getStatements()
    }
    
    func set(account: UserAccount) {
        self.nameLabel.text = account.name
        
        if let agency = account.agency, let bank = account.bankAccount {
            self.accountLabel.text = "\(bank) / \(agency.maskAgency())"
        }
        self.balanceLabel.text = String.formatCurrency(value: account.balance)
    }
    
    // MARK: Requests
    
    func getStatements(){
        var request = StatementScene.GetStatements.Request()
        
        guard let userAccount = router?.dataDestination.userAccount else { return }
        request.id = userAccount.userId
        output?.getStatements(request: request, completionHandler: { (succeed, err) in
            if !succeed {
                self.showDefaultAlert(title: "Ops!", message: err!)
            }
        })
    }
    
    // MARK: Display logic
    
    func displayStatements(response: StatementScene.GetStatements.Response) {
        self.statements = response.statements
        self.tableView.reloadData()
    }
    
    // MARK: Actions
    
    @IBAction func logout(_ sender: Any) {
        UserAccount.clearUserAccountBased()
        self.router?.logout()
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension StatementViewController: StatementPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
