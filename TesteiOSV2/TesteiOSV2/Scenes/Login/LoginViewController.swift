//
//  LoginViewController.swift
//  TesteiOSV2
//
//  Created by Julio Cezar de Souza on 30/05/20.
//  Copyright (c) 2020 Julio Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
//    func displaySomething(viewModel: Login.Something.ViewModel)
    func displayError(response: Login.Error)
    func displayLogin(response: Login.UserAccount)
    
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Outlets
    @IBOutlet weak var loginButton: UIButton!
    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        updateLayout()
        
//        doSomething()
    }
    
    // MARK: Methods
    
    func updateLayout() {
        loginButton.layer.cornerRadius = 4
    }
    
    func displayLogin(response: Login.UserAccount) {
        print("fez o login")
        interactor?.userAccount = response
        self.performSegue(withIdentifier: "Detail", sender: nil)
        self.removeSpinner()
    }
    
    func displayError(response: Login.Error) {
        self.showOkAlert(title: "Erro", message: "\(response.message ?? "") Erro: \(response.code ?? 0)")
        self.removeSpinner()
    }
    
    // MARK: Actions
    @IBAction func login(_ sender: Any) {
        guard let userText = userTextField.text else { return }
        guard let passwordText = passwordTextField.text else { return }
        
        guard userText.isEmailValid() || userText.isValidCPF else {
            self.showOkAlert(title: "Erro", message: "Digite um CPF ou email válido")
            return
        }
        
        guard passwordText.isPasswordStrengthHigh() else {
            self.showOkAlert(title: "Erro", message: "Sua senha deve conter letra maiuscula, um caracter especial e um caracter alfanumérico.")
            return
        }
        
        self.showSpinner(onView: self.view)
        interactor?.login(user: userText, password: passwordText)
    }
    
}

