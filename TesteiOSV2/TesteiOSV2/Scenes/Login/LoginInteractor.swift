//
//  LoginInteractor.swift
//  TesteiOSV2
//
//  Created by Julio Cezar de Souza on 30/05/20.
//  Copyright (c) 2020 Julio Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func login(user: String, password: String)
    var userAccount: Login.UserAccount? { get set }
}

protocol LoginDataStore {
    var userAccount: Login.UserAccount? { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    var userAccount: Login.UserAccount?
    
    func login(user: String, password: String) {
        
        worker = LoginWorker(configuration: .default)
        
        let postObject = Login.PostObject(user: user, password: password)
        
        let request = Login.Request(service: .post, postObject: postObject)
        
        worker?.postLogin(request: request, completion: { result in
            switch result {
            case .success(let response):
                guard let resp = response else {
                    print("response nil")
                    self.presenter?.presentDefaultError()
                    return }
                self.presenter?.presentUserLogin(response: resp)
            case .failure(let error):
                print(error.localizedDescription)
                self.presenter?.presentDefaultError()
            }
        })
        
    }
    
}
