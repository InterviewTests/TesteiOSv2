//
//  DetailInteractor.swift
//  TesteiOSV2
//
//  Created by Julio Cezar de Souza on 05/06/20.
//  Copyright (c) 2020 Julio Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBusinessLogic {
    func getList()
    func updatePersonalData()
}

protocol DetailDataStore {
    var userAccount: Login.UserAccount? { get set }
}

class DetailInteractor: DetailBusinessLogic, DetailDataStore {
    var presenter: DetailPresentationLogic?
    var worker: DetailWorker?
    var userAccount: Login.UserAccount?
    
    func getList() {
        worker = DetailWorker()
        
        if let userId = userAccount?.userId {
            let request = Detail.Request(service: .get(userId: userId))
            
            worker?.getList(request: request, completion: { result in
                switch result {
                case .success(let response):
                    guard let resp = response else {
                        print("response nil")
                        self.presenter?.presentDefaultError()
                        return }
                    self.presenter?.presentList(response: resp)
                case .failure(let error):
                    print(error.localizedDescription)
                    self.presenter?.presentDefaultError()
                }
            })
        }
    }
    
    func updatePersonalData() {
        if let user = userAccount {
            presenter?.presentUser(user: user)
        }
    }
}
