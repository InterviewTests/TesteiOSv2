//
//  HomeViewController.swift
//  CleanSwift
//
//  Created by Samanta Clara Coutinho Rondon do Nascimento on 2019-08-02.
//  Copyright (c) 2019 Sam. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class {
  func displaySomething(viewModel: Home.ViewModel)
}

class HomeViewController: BaseViewController {
    
    @IBOutlet weak var tableView: UITableView!
    var router: HomeRouter
    private var interactor: HomeInteractor
    private var presenter: HomePresenter
    private var tableViewDataSource: HomeDataSource?
    private lazy var realmWorker: RealmWorker = {
        let manager = RealmWorker()
        return manager
    }()
    
    init(interactor: HomeInteractor, router: HomeRouter, presenter: HomePresenter) {
        self.interactor = interactor
        self.interactor.presenter = presenter
        self.presenter = presenter
        self.router = router
        super.init()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: Object lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    // MARK: Setup
    private func setupView() {
        presenter.viewController = self
        
        HomeDataSource.setupHome(tableView: tableView)
        tableViewDataSource = HomeDataSource(presenter: presenter, delegate: self)
        tableView.dataSource = tableViewDataSource
        tableView.delegate = tableViewDataSource
    }
    
  func doSomething() {
    let request = Home.Request(userId: "")
    interactor.doSomething(request: request)
  }
}

extension HomeViewController: HomeDisplayLogic {
    func displaySomething(viewModel: Home.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension HomeViewController: HomeDataSourceDelegate {
    func doLogout() {
        if let user = realmWorker.getObj() {
            realmWorker.deleteObj(obj: user)
        }
        router.routeToSomewhere(home: self)
    }
}
