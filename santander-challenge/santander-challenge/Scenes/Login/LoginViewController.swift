//
//  LoginViewController.swift
//  santander-challenge
//
//  Created by Kevin Oliveira on 01/05/20.
//  Copyright (c) 2020 Kevin Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func displayUser(viewModel: Login.GetUser.ViewModel)
    func displayLogin(viewModel: Login.Login.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        let worker = LoginWorker()
        let userWorker = UserWorker()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        interactor.worker = worker
        interactor.userWorker = userWorker
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        setNeedsStatusBarAppearanceUpdate()

        getUser()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setStatusBarColor()
    }

    override var preferredStatusBarStyle: UIStatusBarStyle {
        .default
    }

    func setStatusBarColor() {
        UIApplication.statusBarColor = .white
    }

    // MARK: Login

    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!

    @IBAction func loginButtonTapped(_ sender: Any) {
        let user = userTextField.text
        let password = passwordTextField.text
        let request = Login.Login.Request(user: user, password: password)
        interactor?.login(request: request)
    }

    func displayLogin(viewModel: Login.Login.ViewModel) {
        passwordTextField.text = nil

        if viewModel.success {
            performSegue(withIdentifier: "AccountDetails", sender: nil)
        } else {
            let alert = UIAlertController(title: "Ops!", message: viewModel.errorMessage, preferredStyle: .alert)
            alert.addAction(UIAlertAction(title: "OK", style: .default))
            self.present(alert, animated: true, completion: nil)
        }
    }

    // MARK: Get User

    func getUser() {
        let request = Login.GetUser.Request()
        interactor?.getUser(request: request)
    }

    func displayUser(viewModel: Login.GetUser.ViewModel) {
        userTextField.text = viewModel.user
    }
}
