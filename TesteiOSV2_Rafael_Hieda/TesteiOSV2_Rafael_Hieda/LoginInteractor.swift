//
//  LoginInteractor.swift
//  TesteiOSV2_Rafael_Hieda
//
//  Created by Rafael  Hieda on 10/28/18.
//  Copyright (c) 2018 Rafael Hieda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func doSomething(request: Login.Something.Request)
    func login(_ user : UserLogin)
}

protocol LoginDataStore
{
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: BankAPIWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Login.Something.Request)
  {
    worker = BankAPIWorker()
    
    
    let response = Login.Something.Response()
    presenter?.presentSomething(response: response)
  }
    
    func login(_ user: UserLogin) {
        var ur : UserResponse?
        worker?.login(user, completionHandler: { (response) in
            //self.presenter?.presentData(response)
            ur = response
            
            if ur?.error?.Success() == true
            {
                print(ur?.userAccount?.name)
                if let userResponse = ur
                {
                    self.presenter?.presentUserData(userResponse)
                }
            }

        })

    }
}
