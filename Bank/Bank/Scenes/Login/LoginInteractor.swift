//
//  LoginInteractor.swift
//  Bank
//
//  Created by Junior Obici on 13/01/20.
//  Copyright (c) 2020 Junior Obici. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func doLogin(request: LoginScene.Login.Request)
    func doLoadLogin(request: LoginScene.Transaction.Request)
}

protocol LoginDataStore {
    var userId: Int { get set }
    var name: String { get set }
    var account: String { get set }
    var agency: String { get set }
    var balance: Double { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    
    var userId: Int = 1
    var name: String = "Nome indispon√≠vel"
    var account: String = "0000"
    var agency: String = "00.000000-0"
    var balance: Double = 0
  
    // MARK: Do something
    func doLogin(request: LoginScene.Login.Request){
        let user = request.user
        let pass = request.pass
        worker = LoginWorker()
        
        worker?.fetchLogin(user: user, pass: pass, parameters: [:], completionHandler: { (login) in
            let response = LoginScene.Login.Response(login: login)
            self.presenter?.presentLogin(response: response)
        })
    }
    
    func doLoadLogin(request: LoginScene.Transaction.Request) {
        let user = request.login
        userId = user.userId
        name = user.userName
        account = user.userAccount
        agency = user.userAgency
        balance = user.userBalance
        
        let response = LoginScene.Transaction.Response()
        presenter?.presentTransaction(response: response)
    }
}
