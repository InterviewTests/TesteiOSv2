//
//  TransactionInteractor.swift
//  Bank
//
//  Created by Junior Obici on 13/01/20.
//  Copyright (c) 2020 Junior Obici. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TransactionBusinessLogic {
    func doLoadInitialData(request: TransactionScene.Load.Request)
}

protocol TransactionDataStore {
    var userId: Int { get set }
    var name: String { get set }
    var account: String {get set}
    var agency: String {get set}
    var balance: Double {get set}
}

class TransactionInteractor: TransactionBusinessLogic, TransactionDataStore {
    var presenter: TransactionPresentationLogic?
    var worker: TransactionWorker?
    
    var userId: Int = 1
    var name: String = "Nome indispon√≠vel"
    var account: String = "0000"
    var agency: String = "00.000000-0"
    var balance: Double = 0
  
    func doLoadInitialData(request: TransactionScene.Load.Request) {
        worker = TransactionWorker()
        worker?.fetchTransactions(userId: userId, completionHandler: { (transactions) in
            let response = TransactionScene.Load.Response(transactions: transactions)
            self.presenter?.presentInitialData(response: response)
        })
    }
}
