//
//  LoginViewControllerTests.swift
//  Bank
//
//  Created by Matheus Rodrigues Ribeiro on 26/04/20.
//  Copyright (c) 2020 Bank. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import XCTest
@testable import TataSantanderBankTest

class LoginViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  var sut: LoginViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupLoginViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupLoginViewController()
  {
    let bundle = Bundle(for: type(of: self))
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    let loginViewController = storyboard.instantiateViewController(withIdentifier: "LoginViewController") as! LoginViewController
    _ = loginViewController.loadViewIfNeeded()
    self.sut = loginViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class LoginBusinessLogicSpy: LoginBusinessLogic
  {
    var doLoginCalled = false
    static let mailUser = "test_user@mail.com"
    
    func doLogin(request: Login.UserData.Request) {
        doLoginCalled = true
    }
    
    func fetchLoggedUser() -> String? {
        return LoginBusinessLogicSpy.mailUser
    }
  }
  
  // MARK: Tests
    func testSetup() {
        XCTAssert(self.sut.interactor != nil && self.sut.router != nil)
    }

    func testMessageErrorInTextField() {
        sut.displayError(error: Login.UserData.Error(title: "Error", message: "Message error"))
        XCTAssert(sut.lblError.text == "Message error")
    }

    func testCPFMaskInTextFieldUser() {
        sut.txtUser.insertText("11111111111")
        XCTAssert(sut.txtUser.text == "111.111.111-11")
    }

    func testCleanTextField() {
        sut.txtUser.insertText("")
        XCTAssert(sut.txtUser.text == "")
    }

    func testActionLoginButton() {
        sut.doLogin()
        XCTAssert(sut.lblError.text == "User or password incorrect.")
    }
    
    func testLogin() {
        sut.txtUser.insertText("test_user@mail.com")
        sut.txtPassword.insertText("Test@1")
        sut.doLogin()
        XCTAssert(sut.txtUser.isEnabled == false)
        XCTAssert(sut.txtPassword.isEnabled == false)
        XCTAssert(sut.btnLogin.isEnabled == false)
        XCTAssert(sut.actLoading.isAnimating == true)
    }
}
