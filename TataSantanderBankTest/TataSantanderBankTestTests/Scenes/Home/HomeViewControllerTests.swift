//
//  HomeViewControllerTests.swift
//  Bank
//
//  Created by Matheus Rodrigues Ribeiro on 27/04/20.
//  Copyright (c) 2020 Bank. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TataSantanderBankTest
import XCTest

class HomeViewControllerTests: XCTestCase
{
    // MARK: Subject under test

    var sut: HomeViewController!
    var window: UIWindow!

    // MARK: Test lifecycle

    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupHomeViewController()
    }

    override func tearDown()
    {
        window = nil
        super.tearDown()
    }

    // MARK: Test setup

    func setupHomeViewController()
    {
        let bundle = Bundle(for: type(of: self))
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        let homeViewController = storyboard.instantiateViewController(withIdentifier: "HomeViewController") as! HomeViewController
        _ = homeViewController.loadViewIfNeeded()
        self.sut = homeViewController
    }
  
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
  
    // MARK: Test doubles
  
    class HomeBusinessLogicSpy: HomeBusinessLogic
    {
        var logoutCalled = false
        var loadStatementsCalled = false
        
        func logout() {
            logoutCalled = true
        }
        
        func loadStatements(request: Home.StatementList.Request) {
            loadStatementsCalled = true
        }
    }
    
    class HomeDataStoreSpy: HomeDataStore {
        var userData: Home.UserData.ViewModel? {
            get {
                return Home.UserData.ViewModel(id: 1, name: "Matheus Rodrigues Ribeiro", agency: "0001", account: "00000012", balance: 43.21)
            }
            set{}
        }
    }
  
    // MARK: Tests
    
    func testPopulateTableView() {
        var statementList = Home.StatementList.ViewModel(statements: [])
        for _ in 0...4 {
            statementList.statements.append(Home.StatementList.Statement(transaction: "Pagamento", description: "Cartao", date: "01/02/2020", value: "R$ 20,00"))
        }
        self.sut?.displayStatements(viewModel: statementList)
        XCTAssert(sut!.tableView(sut!.tblStatment, numberOfRowsInSection: 0) == 5)
    }
    
    func testPopulateCell() {
        var statements = Home.StatementList.ViewModel(statements: [])
        
        for _ in 0...4 {
            statements.statements.append(Home.StatementList.Statement(transaction: "Pagamento", description: "Cartao", date: "01/02/2020", value: "R$ 36,65"))
        }
        sut!.statementList = statements
        let cell = sut!.tableView(sut!.tblStatment, cellForRowAt: IndexPath(row: 0, section: 0))
        XCTAssert(
            cell is StatementItemTableViewCell &&
            (cell as! StatementItemTableViewCell).lblType.text == "Pagamento" &&
            (cell as! StatementItemTableViewCell).lblName.text == "Cartao" &&
            (cell as! StatementItemTableViewCell).lblDate.text == "01/02/2020" &&
            (cell as! StatementItemTableViewCell).lblValue.text == "R$ 36,65"
        )
    }
    
    func testPopulateUserData() {
        let router = HomeRouter()
        sut!.router = router
        router.dataStore = HomeDataStoreSpy()
        
        sut?.loadUserData()
        
        XCTAssert(sut!.lblUserName.text == "Matheus Rodrigues Ribeiro")
    }
}
