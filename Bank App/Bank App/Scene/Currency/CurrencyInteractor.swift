//
//  CurrencyInteractor.swift
//  Bank App
//
//  Created by Christian Castro on 29/04/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrencyBusinessLogic {
    func doSomething(request: Currency.Something.Request)
    func getCurrencyByUser(completion: @escaping () -> ())
}

protocol CurrencyDataStore {
    var userInfo: User? { get set }
    var userCurrency: [CurrencyByUser] { get set }
}

class CurrencyInteractor: CurrencyBusinessLogic, CurrencyDataStore {
    var presenter: CurrencyPresentationLogic?
    var worker: CurrencyWorker?
    
    var userInfo: User?
    var userCurrency: [CurrencyByUser] = []
    
    func doSomething(request: Currency.Something.Request) {
        worker = CurrencyWorker()
        worker?.doSomeWork()
        var response = Currency.Something.Response()
        response.userInfo = userInfo
        response.userCurrency = userCurrency
        presenter?.presentSomething(response: response)
    }
    
    func getCurrencyByUser(completion: @escaping () -> ()) {
        worker = CurrencyWorker()
        guard let path = userInfo?.id else { return }
        worker?.getCurrencyByUser(user: path) { (result) in
            switch result {
            case .success(let data):
                self.userCurrency = data
                completion()
            case .failure(let error):
                print(error)
            }
        }
    }
}
