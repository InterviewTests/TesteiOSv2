//
//  IntroViewControllerTests.swift
//  Bank App
//
//  Created by Chrystian Salgado on 20/02/19.
//  Copyright (c) 2019 Salgado's Productions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Bank_App
import XCTest

class IntroControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: IntroController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupIntroViewController()
    }
    
    override func tearDown()
    {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupIntroViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "IntroController") as? IntroController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class IntroBusinessLogicSpy: IntroBusinessLogic {
        var doSomethingCalled = false
        
        func loginUser(user: UserLogin) {
            doSomethingCalled = true
        }
        
        func tryAutoLogin() {
            doSomethingCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldDoSomethingWhenViewIsLoaded() {
        // Given
        let spy = IntroBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Do
        spy.tryAutoLogin()
        
        // Then
        XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
    }
    
    func testDisplaySomething() {
        // Given
        //    let viewModel = Intro.Something.ViewModel()
        
        // When
        loadView()
        sut.configureLoginAnimationLoading()
        
        // Then
        XCTAssert(sut.loadingView?.spinningView != nil)
    }
}
