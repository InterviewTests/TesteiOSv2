//
//  IntroPresenterTests.swift
//  Bank App
//
//  Created by Chrystian Salgado on 20/02/19.
//  Copyright (c) 2019 Salgado's Productions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Bank_App
import XCTest

class IntroPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: IntroPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupIntroPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupIntroPresenter() {
        sut = IntroPresenter()
    }
    
    // MARK: Test doubles
    
    class IntroDisplayLogicSpy: IntroDisplayLogic {
       
        var displaySomethingCalled = false
        
        func displayData() {
            displaySomethingCalled = true
        }
        
        func showError(_ alertController: UIAlertController) {
            displaySomethingCalled = true
        }
        
        func presentDetailController() {
            displaySomethingCalled = true
        }
        
        func configureLoginAnimationLoading() {
            displaySomethingCalled = true
        }
        
        func configureLoginAnimationCompletion() {
            displaySomethingCalled = true
        }
        
        func configureInvalidPassword() {
            displaySomethingCalled = true
        }
        
        func setupStatusBar(statusBarStyle: UIStatusBarStyle, backgroudColor: UIColor?) {
            displaySomethingCalled = true
        }
        
        func enableLogin(_ enabled: Bool) {
            displaySomethingCalled = true
        }
        
    }
    
    // MARK: Tests
    
    func testShowError() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        let error = BankErrorType.userWrong.error
        sut.showError(error: error)
        
        // Then
        XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller para showError")
    }
    
    func testShowHistoryController() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.showHistoryController()
        
        // Then
        XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller showHistoryController")
    }
    
    func testLoginLoadingAnimation() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.showLoading()
        
        // Then
                XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller para loadingAnimation")
    }
    
    func testInvalidPassword() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.catchPasswordInvalid()
        
        // Then
        XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller para invalidPassword")
    }
    
    func testSetupStatusBar() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.setDefaultStatusBar()
        
        // Then
        XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller para setDefaultStatusBar()")
    }
    
    func testEnableLoginButton() {
        let spy = IntroDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.enableLoginButton(true)
        
        // Then
        XCTAssertTrue(spy.displaySomethingCalled, "Foi chamado o método correspondente no controller para enableLoginButton(_ boolean: Bool)")
    }
}
