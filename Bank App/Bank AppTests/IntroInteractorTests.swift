//
//  IntroInteractorTests.swift
//  Bank App
//
//  Created by Chrystian Salgado on 20/02/19.
//  Copyright (c) 2019 Salgado's Productions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Bank_App
import XCTest

class IntroInteractorTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: IntroInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupIntroInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupIntroInteractor() {
        sut = IntroInteractor()
    }
    
    // MARK: Test doubles
    
    class IntroPresentationLogicSpy: IntroPresentationLogic {
        
        var presentSomethingCalled = false
        
        func showHistoryController() {
            presentSomethingCalled = true
        }
        
        func showError(error: BankError) {
            print(error.message ?? "")
            presentSomethingCalled = true
        }
        
        func showLoading() {
            presentSomethingCalled = true
        }
        
        func catchPasswordInvalid() {
            presentSomethingCalled = true
        }
        
        func abortAutoLogin(error: BankError) {
            print(error.message)
            presentSomethingCalled = true
        }
        
        func setDefaultStatusBar() {
            presentSomethingCalled = true
        }
        
        func enableLoginButton(_ enable: Bool) {
            presentSomethingCalled = true
        }
    }
    
    // MARK: Tests
    func testAutoLogin() {
        
        // Given
        let spy = IntroPresentationLogicSpy()
        sut.presenter = spy
        
        // When
            sut.tryAutoLogin()
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "testAutoLogin() dentro do presenter foi chamado")
    }
    
    func testManualLoginError() {
        
        // Given
        let spy = IntroPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.loginUser(user: UserLogin(user: "", password: "1223456"))
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "o método loginUser() chamou alguem la dentro do presenter no caso de erro.")
    }
    
    func testManualLoginSuccess() {
        
        // Given
        let spy = IntroPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.loginUser(user: UserLogin(user: "user_login", password: "Teste2@19"))
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "o método loginUser() chamou alguem la dentro do presenter no caso de sucesso.")
    }
    
    func testSetDefaultStatusBar() {
        
        // Given
        let spy = IntroPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.resetStatusBar()
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "o método setDefaultStatusBar() chamou alguem la dentro do presenter no caso de sucesso.")
    }
    
    func testEnableLoginButton() {
        
        // Given
        let spy = IntroPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.verifyFields([UITextField()])
        
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "o método enableLoginButton() foi chamado no presenter.")
    }
}
