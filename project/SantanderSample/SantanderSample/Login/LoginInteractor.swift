//
//  LoginInteractor.swift
//  SantanderSample
//
//  Created by Virgilius Santos on 26/10/18.
//  Copyright (c) 2018 Virgilius Santos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func auth(request: Login.Request)
}

protocol LoginDataStore {
    var user: Login.UserAccount? { get set }
}

class LoginInteractor: LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker!
  var user: Login.UserAccount?
  
  
}

extension LoginInteractor: LoginBusinessLogic {
    func auth(request: Login.Request) {
        var response = Login.Response()
        let validationId = worker.validateId(request.user)
        let validationPassword = worker.validatePassword(request.password)
        
        if !validationId {
            response.error = Login.Error(code: 0, message:"Erro de ID")
            presenter?.present(response: response)
        } else if !validationPassword {
            response.error = Login.Error(code: 1, message:"Erro de password")
            presenter?.present(response: response)
        } else {
            worker.login(request) { (result) in
                switch result{
                case .success(let response):
                    if response.success {
                        self.user = response.userAccount
                    }
                    self.presenter?.present(response: response)
                    break
                case .error(let error):
                    response.error
                        = Login.Error(code: 2, message: error.localizedDescription)
                    self.presenter?.present(response: response)
                }
            }
        }
    }
}
