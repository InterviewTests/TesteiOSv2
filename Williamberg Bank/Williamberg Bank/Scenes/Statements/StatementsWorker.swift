//
//  StatementsWorker.swift
//  Williamberg Bank
//
//  Created by padrao on 23/05/20.
//  Copyright (c) 2020 Williamberg. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class StatementsWorker
{
    func fetchStatements(userId: Int, completionHandler: @escaping( _ Statements: [Statement]?, _ errorMessage: String?) -> Void){
        
        BaseBankAPI().makeRequest(serviceName: "statements" + "/\(userId)", args: nil, httpMethod: .GET) { (data, response, error) in
            if let _ = error{
                DispatchQueue.main.async {
                    completionHandler(nil, "Por favor, verifique sua conex√£o com a internet e tente novamente.")
                }
            }
            else{
                do{
                    guard let _data = data, !_data.isEmpty else{
                        DispatchQueue.main.async {
                            completionHandler(nil, BaseBankAPI.ServiceError.NullResponse.localizedDescription)
                        }
                        return
                    }
                    let statementsDTO = try JSONDecoder().decode(StatementDTO.self, from: _data)
                    DispatchQueue.main.async {
                        completionHandler(statementsDTO.statementList, nil)
                    }
                }
                catch{
                    DispatchQueue.main.async {
                        completionHandler(nil, "erro ao formatar resposta recebida.")
                    }
                }
            }
        }
    }
}
