//
//  ExtratoInteractor.swift
//  TesteiOSv2
//
//  Created by Marcel Mendes Filho on 26/02/19.
//  Copyright (c) 2019 Accenture do Brasil Ltda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ExtratoBusinessLogic
{
    func retrieveStatement()
    func formatHeader(request: Extrato.Header.Request)
}

protocol ExtratoDataStore
{
    var userAccount: UserAccountModel? { get set }
}

class ExtratoInteractor: ExtratoBusinessLogic, ExtratoDataStore
{
    var presenter: ExtratoPresentationLogic?
    var worker: ExtratoWorker?
    var userAccount: UserAccountModel?
  
    // MARK: retrieve statement

    func retrieveStatement()
    {
        if worker == nil{
            worker = ExtratoWorker()
        }

        worker?.retrieveStatement(completionResult: { (statement, result) in
            if !result{
                var response = Extrato.Statement.Response()
                response.userMessage = Constants.Statement.couldNotRetrieveStatement
                self.presenter?.presentMessageToUser(response: response)
            } else if let statement = statement{
                var response = Extrato.Statement.Response()
                response.statementEntries = statement
                self.presenter?.presentStatement(response: response)
            }
        })
    }

    func formatHeader(request: Extrato.Header.Request) {
        var response = Extrato.Header.Response()
        response.headerData = request.headerData
        self.presenter?.presentHeader(response: response)
    }
}
