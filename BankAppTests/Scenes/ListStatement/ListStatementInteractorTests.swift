//
//  ListStatementInteractorTests.swift
//  BankApp
//
//  Created by Lynneker Souza on 5/31/20.
//  Copyright (c) 2020 Lynneker Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BankApp
import XCTest

class ListStatementInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListStatementInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListStatementInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListStatementInteractor()
  {
    sut = ListStatementInteractor()
    sut.userAccount = Seeds.UserInfo.loggedAccount
  }
  
  // MARK: Test doubles
  
  class ListStatementPresentationLogicSpy: ListStatementPresentationLogic
  {
    
    
    var presentFetchStatementCalled = false
    var presentUserAccountCalled = false
    
    func presentFetchStatement(response: ListStatement.FetchStatement.Response) {
        presentFetchStatementCalled = true
    }
    
    func presentUserAccount(response: ListStatement.UserAccountInfo.Response) {
        presentUserAccountCalled = true
    }
  }
  
  // MARK: Tests
  
  func testDoSomething()
  {
    // Given
    let spy = ListStatementPresentationLogicSpy()
    sut.presenter = spy
    let request = ListStatement.UserAccountInfo.Request()
    
    // When
    sut.fetchUserAccount(request: request)
    
    // Then
    XCTAssertTrue(spy.presentUserAccountCalled, "doSomething(request:) should ask the presenter to format the result")
  }
}
