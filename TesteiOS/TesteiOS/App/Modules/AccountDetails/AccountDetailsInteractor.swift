//
//  AccountDetailsInteractor.swift
//  TesteIOS
//
//  Created by VM on 26/07/20.
//  Copyright (c) 2020 VM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementsBusinessLogic {
    func fetchStatements()
    func fetchHeader(data: AccountDetailsModel.Header.Request)
}

protocol StatementsDataStore {
    var userAccount: UserAccount? { get set }
}

class AccountDetailsInteractor: StatementsBusinessLogic, StatementsDataStore {
    var userAccount: UserAccount?
    var presenter: AccountDetailsPresentationLogig?
    var worker: AccountDetailsWorker?
    
    func fetchHeader(data: AccountDetailsModel.Header.Request) {
        let response = AccountDetailsModel.Header.Response(headerData: data.headerData)
        presenter?.setupHeader(data: response)
    }
  
    func fetchStatements() {
        if worker == nil {
            worker = AccountDetailsWorker()
        }
        
        worker?.fetchStatements(completionSuccess: { (response) in
            DispatchQueue.main.async {
                self.presenter?.presenterFetchAccountDetails(response: response)
            }
        }, completionFailure: { (error) in
            DispatchQueue.main.async {
                self.presenter?.presentFetchError(error: error)
            }
        })
    }
}
