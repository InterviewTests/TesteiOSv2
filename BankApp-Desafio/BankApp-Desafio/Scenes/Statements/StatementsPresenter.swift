//
//  StatementsPresenter.swift
//  BankApp-Desafio
//
//  Created by Mizia Lima on 2/26/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementsPresentationLogic {
    func presentStatement(response: Statements.Response)
    func presentErrorMessage(message: String)
}

class StatementsPresenter: StatementsPresentationLogic {
  weak var viewController: StatementsDisplayLogic?
  
  // MARK: Present
    func presentStatement(response: Statements.Response) {
        var statementsViewModel: [Statements.StatementViewModel.Statement] = []
        response.statement.statementList.forEach { statement in
            let viewModel  = Statements.StatementViewModel.Statement(title: statement.title,
                                                            description: statement.desc,
                                                            date: formatDate(date: statement.date),
                                                            value: statement.value.toCurrencyFormat())
            statementsViewModel.append(viewModel)
        }
        let viewModel = Statements.StatementViewModel(statements: statementsViewModel)
        viewController?.displayStatements(viewModel: viewModel)
    }
        
    func presentErrorMessage(message: String) {
        viewController?.showStatementFailureAlert(title: "Opa, Houve um erro.", message: message)
    }
    
    private func formatDate(date: String) -> String {
        let formatter = DateFormatter()
        formatter.dateFormat = "yyyy/MM/dd"
        guard
            let formatedDate = formatter.date(from: date)
        else {
            return ""
        }
        formatter.dateFormat = "dd/MM/yyyy"
        return formatter.string(from: formatedDate)
    }
}
