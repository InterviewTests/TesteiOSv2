//
//  StatementViewController.swift
//  TestSantander
//
//  Created by ely.assumpcao.ndiaye on 08/07/19.
//  Copyright (c) 2019 ely.assumpcao.ndiaye. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementDisplayLogic: class
{
    func displayStatementData(viewModel: StatementScene.Load.ViewModel)
}

class StatementViewController: UIViewController, StatementDisplayLogic
{
    @IBOutlet weak var nameUserLbl: UILabel!
    @IBOutlet weak var agencyLbl: UILabel!
    @IBOutlet weak var balanceLbl: UILabel!
    @IBOutlet weak var tableView: UITableView!
    
    var interactor: StatementBusinessLogic?
    var router: (NSObjectProtocol & StatementRoutingLogic & StatementDataPassing)?
    
    var arrayStatements = [StatementList]()
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = StatementInteractor()
        let presenter = StatementPresenter()
        let router = StatementRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        loadStatementData()
        
        tableView.delegate = self 
        tableView.dataSource = self
        
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func loadStatementData()
    {
        let request = StatementScene.Load.Request()
        interactor?.doLoadStatementData(request: request)
    }
    
    func displayStatementData(viewModel: StatementScene.Load.ViewModel)
    {
        //nameTextField.text = viewModel.name
        arrayStatements = viewModel.statements
        
        nameUserLbl.text = router?.dataStore?.name
        agencyLbl.text = "\(router!.dataStore!.bankAccount) / \((router!.dataStore!.agency).Agency)"
        balanceLbl.text = Decimal(router!.dataStore!.balance).Currency
        
        DispatchQueue.main.async {
            self.tableView.reloadData()
        }
        
    }
    
    
    
    @IBAction func closedPressedButton(_ sender: Any) {
        dismiss(animated: true, completion: nil)
    }
    
    
}

//Protocolo da tableview
extension StatementViewController: UITableViewDataSource,UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: "statementAccountsCell", for: indexPath) as? StatementAccountsCell{
            
            let statement = arrayStatements[indexPath.row]
            cell.titleLbl.text = statement.title
            cell.descriptionLbl.text = statement.desc
            
            let dateByStatement = statement.date
            //Convert yy-MM-dd to dd/MM/yyyy
            let inputFormatter = DateFormatter()
            inputFormatter.dateFormat = "yyyy-MM-dd"
            let showDate = inputFormatter.date(from: dateByStatement)
            inputFormatter.dateFormat = "dd/MM/yyyy"
            let resultDateString = inputFormatter.string(from: showDate!)
            
            cell.dateLbl.text = resultDateString
            
            cell.valueLbl.text = (Decimal(statement.value).Currency)
            
            //cell.configureCell(statement: statement)
            return cell
        }else {
            return UITableViewCell()
        }
    }
    
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrayStatements.count
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 8.0
    }
    
    
}
