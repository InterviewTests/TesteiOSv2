//
//  LoginInteractor.swift
//  TestSantander
//
//  Created by ely.assumpcao.ndiaye on 07/06/19.
//  Copyright (c) 2019 ely.assumpcao.ndiaye. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func doLogin(request: LoginScene.Login.Request)
    //Ao chamar o Statement a primeira coisa é registrar o protocolo
    func doLoadUserDatas(request: LoginScene.Statements.Request)
}

//Protocolo que implementa o interactor que é carregado pelo transporte de dados
protocol LoginDataStore{
    //var name: String { get set }
    var userId: Int { get set }
    var name: String { get set }
    var bankAccount: String { get set }
    var agency: String { get set }
    var balance: Double { get set }
    
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    //var name: String = ""
    var userId: Int = 0
    var name: String = ""
    var bankAccount: String = ""
    var agency: String = ""
    var balance: Double = 0
    
    
    // MARK: Do something
    
    func doLogin(request: LoginScene.Login.Request){
        let user = request.user
        print("User vindo do Model: \(user)")
        let pass = request.pass
        worker = LoginWorker()
        worker?.fetchUserID(user: user, pass: pass, completionHandler: { (useraccounts) in
            let response = LoginScene.Login.Response(userAccounts: useraccounts)
            self.presenter?.presentUserAccounts(response: response)
        })
    }
    
    func doLoadUserDatas(request: LoginScene.Statements.Request) {
        let user = request.userAccount
        userId = user.userId
        name = user.name
        bankAccount = user.bankAccount
        agency = user.agency
        balance = user.balance
        print ("UserID do Interactor")
        print(userId)
        print(name)
        print(balance)
        //Resposta da requisicao sendo enviada atraves do response
        let response = LoginScene.Statements.Response()
        presenter?.presentStatements(response: response)
    }
    
}
