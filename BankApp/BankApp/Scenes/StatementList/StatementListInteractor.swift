//
//  StatementListInteractor.swift
//  BankApp
//
//  Created by José Inácio Athayde Ferrarini on 17/03/20.
//  Copyright (c) 2020 br.com.solutis.inacioferrarini. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementListBusinessLogic {
    func fetchStatements()
}

protocol StatementListDataStore {
    var userData: UserDataModel? { get set }
    var statementList: [StatementModel]? { get set }
    var fetchError: String? { get set }
}

class StatementListInteractor: StatementListBusinessLogic, StatementListDataStore {

    internal var presenter: StatementListPresentationLogic?
    internal var worker: StatementListWorker?  = StatementListWorker()
    var userData: UserDataModel?
    var statementList: [StatementModel]?
    var fetchError: String?

    // MARK: Statements

    func fetchStatements() {
        worker?.fetchStatements(completion: { (result: Result<StatementList.Statements.Response?, Error>) in
            
            switch result {
            case .success(let response):
                self.statementList = response?.statementList
                self.fetchError = nil
                self.presenter?.fetchSuccess(response: response)
            case .failure(let error):
                self.userData = nil
                self.fetchError = error.localizedDescription
                self.presenter?.fetchError(error: self.fetchError)
            }
            
        })
        
    }

}
