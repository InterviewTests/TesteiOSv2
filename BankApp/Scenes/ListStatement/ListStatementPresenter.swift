//
//  ListStatementPresenter.swift
//  BankApp
//
//  Created by Lynneker Souza on 5/29/20.
//  Copyright (c) 2020 Lynneker Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListStatementPresentationLogic
{
    func presentFetchStatement(response: ListStatement.FetchStatement.Response)
    func presentUserAccount(response: ListStatement.UserAccountInfo.Response)
}

class ListStatementPresenter: ListStatementPresentationLogic
{
    weak var viewController: ListStatementDisplayLogic?
    
    let currencyFormatter: NumberFormatter = {
        let currencyFormatter = NumberFormatter()
        currencyFormatter.numberStyle = .currency
        currencyFormatter.usesGroupingSeparator = true
        currencyFormatter.locale = Locale(identifier: "pt_BR")
        return currencyFormatter
    }()
    
    let dateFormatterGet: DateFormatter = {
        let dateFormatterGet = DateFormatter()
        dateFormatterGet.dateFormat = "yyyy-MM-dd"
        
        return dateFormatterGet
    }()
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.locale = Locale(identifier: "pt_BR")
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = .none
        return dateFormatter
    }()
    
    // MARK: Fetch Statement
    
    func presentFetchStatement(response: ListStatement.FetchStatement.Response)
    {
        var displayedStatement: [ListStatement.FetchStatement.ViewModel.DisplayedStatement] = []
        response.statements.sorted(by: {$0.date > $1.date}).forEach({
            let title = $0.title
            let desc = $0.desc
            let date = dateFormatter.string(from: dateFormatterGet.date(from: $0.date)!)
            let value = currencyFormatter.string(from: NSNumber(value: $0.value))!
            displayedStatement.append(ListStatement.FetchStatement.ViewModel.DisplayedStatement(title: title, desc: desc, date: date, value: value))
        })
        viewController?.displayFetchedStatement(viewModel: ListStatement.FetchStatement.ViewModel(displayedStatement: displayedStatement))
    }
    
    func presentUserAccount(response: ListStatement.UserAccountInfo.Response) {
        let user = response.userAccount
        let id = "\(user.userId)"
        let name = user.name
        let agency = user.agency
        let account = user.bankAccount
        let balance = currencyFormatter.string(from: NSNumber(value: user.balance))!
        let displayed = ListStatement.UserAccountInfo.ViewModel.DisplayedUserAccount(userId: id, name: name, bankAccount: account, agency: agency, balance: balance)
        let viewModel = ListStatement.UserAccountInfo.ViewModel(displayedUserAccount: displayed)
        viewController?.displayUserAccountInfo(viewModel: viewModel)
        
    }
}

