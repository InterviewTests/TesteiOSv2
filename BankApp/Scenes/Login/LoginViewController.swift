//
//  LoginViewController.swift
//  BankApp
//
//  Created by Lynneker Souza on 5/29/20.
//  Copyright (c) 2020 Lynneker Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
    func displayUserAccountStatement(viewModel: Login.CreateLogin.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic, UITextFieldDelegate
{
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        //doSomething()
    }
    
    // MARK: Text fields
    
    @IBOutlet weak var loginTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool
    {        
        textField.resignFirstResponder()
        if textField == loginTextField {
            passwordTextField.becomeFirstResponder()
        } else if textField == passwordTextField {
            //press Login button
        }
        return true
    }
    
    // MARK: Contact info
    
    @IBAction func loginButtonTapped(_ sender: Any) {
        guard let user = loginTextField.text, !user.isEmpty,
        let password = passwordTextField.text, !password.isEmpty else {
            showLoginFailureAlert(title: "Ops", message: "Usu√°rio ou senha incorreta.")
            return
        }
        let request = Login.CreateLogin.Request(loginFromFields: Login.LoginFromFields(login: user, password: password))
        interactor?.createLogin(request: request)
    }
    
    func displayUserAccountStatement(viewModel: Login.CreateLogin.ViewModel)
    {
        if viewModel.userAccount != nil {
            router?.routeToStatement(segue: nil)
        } else if let error = viewModel.error {
            showLoginFailureAlert(title: "Ops", message: error.localizedDescription)
        }
    }
    
    func displayError(viewModel: Login.CreateLogin.Response)
    {
        print(viewModel.error.debugDescription)
    }
    
    // MARK: Error handling
    
    private func showLoginFailureAlert(title: String, message: String)
    {
        let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
        let alertAction = UIAlertAction(title: "OK", style: .default, handler: nil)
        alertController.addAction(alertAction)
        showDetailViewController(alertController, sender: nil)
    }
}
